{"ast":null,"code":"var _jsxFileName = \"/home/ragala-akhil/file-compressor-project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [fileSize, setFileSize] = useState(0);\n  const [fileType, setFileType] = useState('');\n  const [uploadedFileContent, setUploadedFileContent] = useState(null);\n\n  // Changed default selected algorithm from 'huffman' to 'lz77'\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('lz77');\n  const [operationType, setOperationType] = useState('compress');\n  const [processingResult, setProcessingResult] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(() => {\n        setMessage('');\n        setMessageType('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [message]);\n  const handleFileChange = event => {\n    const file = event.target.files ? event.target.files[0] : event.dataTransfer.files[0];\n    if (file) {\n      if (file.size > 50 * 1024 * 1024) {\n        showMessage('File is too large. Max 50MB allowed for demo.', 'error');\n        setSelectedFile(null);\n        setFileName('');\n        setFileSize(0);\n        setFileType('');\n        setUploadedFileContent(null);\n        return;\n      }\n      setSelectedFile(file);\n      setFileName(file.name);\n      setFileSize(file.size);\n      setFileType(file.type);\n      setProcessingResult(null);\n      const reader = new FileReader();\n      reader.onload = e => {\n        if (file.type.startsWith('text/') || file.type.includes('json') || file.type.includes('xml') || file.type.includes('svg')) {\n          setUploadedFileContent(e.target.result);\n        } else if (file.type.startsWith('image/')) {\n          setUploadedFileContent(e.target.result);\n        } else {\n          setUploadedFileContent(null);\n          showMessage('Preview not available for this file type.', 'info');\n        }\n      };\n      if (file.type.startsWith('text/') || file.type.includes('json') || file.type.includes('xml') || file.type.includes('svg')) {\n        reader.readAsText(file);\n      } else if (file.type.startsWith('image/')) {\n        reader.readAsDataURL(file);\n      } else {}\n      showMessage(`File '${file.name}' (${(file.size / 1024).toFixed(2)} KB) selected.`, 'info'); // Tell the user the file is selected\n    } else {\n      setSelectedFile(null);\n      setFileName('');\n      setFileSize(0);\n      setFileType('');\n      setUploadedFileContent(null);\n      showMessage('No file selected.', 'info');\n    }\n  };\n  const handleBrowseClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'copy';\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    handleFileChange(event);\n  };\n  const processFile = async () => {\n    if (!selectedFile) {\n      showMessage('Please select a file first.', 'error');\n      return;\n    }\n    setLoading(true);\n    setMessage('Processing file...');\n    setMessageType('info');\n    setProcessingResult(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('algorithm', selectedAlgorithm);\n      formData.append('operation', operationType);\n      formData.append('originalSize', fileSize);\n      const response = await fetch('http://localhost:5000/api/process-file', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        const processedFileBlob = base64toBlob(data.processedFileBase64, data.mimeType);\n        setProcessingResult({\n          originalSize: data.originalSize,\n          processedSize: data.processedSize,\n          compressionRatio: data.compressionRatio,\n          processingTime: data.processingTime,\n          processedFileBlob: processedFileBlob,\n          processedFileName: data.fileName\n        });\n        showMessage(`File ${operationType === 'compress' ? 'compressed' : 'decompressed'} successfully!`, 'success');\n      } else {\n        showMessage(`Backend error: ${data.message}`, 'error');\n      }\n    } catch (error) {\n      console.error('Error processing file:', error);\n      showMessage(`Error processing file: ${error.message}. Please ensure the backend server is running.`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const base64toBlob = (base64, mimeType) => {\n    const byteCharacters = atob(base64);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    return new Blob([byteArray], {\n      type: mimeType\n    });\n  };\n  const showMessage = (msg, type) => {\n    setMessage(msg);\n    setMessageType(type);\n  };\n  const handleDownload = () => {\n    if (processingResult && processingResult.processedFileBlob) {\n      const url = URL.createObjectURL(processingResult.processedFileBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      let newFileName;\n      const originalFileNameWithoutExt = fileName.split('.').slice(0, -1).join('.');\n      const originalFileExtension = fileName.split('.').pop();\n      if (operationType === 'compress') {\n        newFileName = `${originalFileNameWithoutExt}_compressed_with_${selectedAlgorithm}.comp`;\n      } else {\n        newFileName = `${originalFileNameWithoutExt}_decompressed_with_${selectedAlgorithm}.${originalFileExtension}`;\n      }\n      link.setAttribute('download', newFileName);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      showMessage('File download initiated!', 'success');\n    } else {\n      showMessage('No processed file available for download.', 'error');\n    }\n  };\n  const algorithmDescriptions = {\n    rle: {\n      name: 'Run-Length Encoding (RLE)',\n      description: 'Simple compression that replaces repeated characters (like \"AAAAA\") with a count (like \"5A\"). Good for simple images. (Uses real custom implementation)'\n    },\n    lz77: {\n      name: 'LZ77',\n      description: 'Compresses data by finding repeated patterns and replacing them with references to where they appeared before. Used in popular formats like ZIP. (Uses real zlib Deflate/Inflate)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container-outer\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-heading\",\n        children: \"File Compression & Decompression Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"app-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-heading\",\n          children: \"Understanding the Algorithms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), Object.entries(algorithmDescriptions).map(([key, algo]) => /*#__PURE__*/_jsxDEV(\"details\", {\n          className: \"algorithm-details\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"summary\", {\n            children: algo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: algo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"app-section upload-section-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-heading\",\n          children: \"1. Upload Your File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone\",\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          onClick: handleBrowseClick,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop your file here, or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileChange,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBrowseClick,\n            className: \"browse-button\",\n            children: \"Browse Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [\" \", \"Selected File: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 30\n          }, this), \" (\", (fileSize / 1024).toFixed(2), \" KB)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), uploadedFileContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"File Content Preview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), fileType.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadedFileContent,\n            alt: \"File Preview\",\n            className: \"file-preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"file-preview-text\",\n            children: uploadedFileContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"app-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-heading\",\n          children: \"2. Choose Algorithm & Operation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '25px'\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-heading\",\n            style: {\n              fontSize: '1.2em',\n              marginBottom: '15px'\n            },\n            children: \"Select Algorithm:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio-group\",\n            children: [\" \", ['rle', 'lz77'].map(algo => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"algorithm\",\n                value: algo,\n                checked: selectedAlgorithm === algo,\n                onChange: () => setSelectedAlgorithm(algo)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  textTransform: 'capitalize'\n                },\n                children: [\" \", algorithmDescriptions[algo].name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, algo, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-heading\",\n            style: {\n              fontSize: '1.2em',\n              marginBottom: '15px'\n            },\n            children: \"Select Operation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio-group\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-label compress\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"operation\",\n                value: \"compress\",\n                checked: operationType === 'compress',\n                onChange: () => setOperationType('compress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Compress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-label decompress\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"operation\",\n                value: \"decompress\",\n                checked: operationType === 'decompress',\n                onChange: () => setOperationType('decompress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Decompress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '30px'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processFile,\n          disabled: !selectedFile || loading,\n          className: \"process-button\",\n          children: loading ? 'Processing...' : `Process File (${operationType.charAt(0).toUpperCase() + operationType.slice(1)})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), processingResult && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-heading\",\n          children: \"3. Processing Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-grid\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Original Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [processingResult.originalSize, \" bytes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Processed Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [processingResult.processedSize, \" bytes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Compression Ratio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: processingResult.compressionRatio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Processing Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [processingResult.processingTime, \" ms\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownload,\n            className: \"download-button\",\n            children: \"Download Processed File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7Fc7Ya3KK3gMcaQFSZcFO/T9L3M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","fileName","setFileName","fileSize","setFileSize","fileType","setFileType","uploadedFileContent","setUploadedFileContent","selectedAlgorithm","setSelectedAlgorithm","operationType","setOperationType","processingResult","setProcessingResult","message","setMessage","messageType","setMessageType","loading","setLoading","fileInputRef","timer","setTimeout","clearTimeout","handleFileChange","event","file","target","files","dataTransfer","size","showMessage","name","type","reader","FileReader","onload","e","startsWith","includes","result","readAsText","readAsDataURL","toFixed","handleBrowseClick","current","click","handleDragOver","preventDefault","stopPropagation","dropEffect","handleDrop","processFile","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","status","data","success","processedFileBlob","base64toBlob","processedFileBase64","mimeType","originalSize","processedSize","compressionRatio","processingTime","processedFileName","error","console","base64","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","Blob","msg","handleDownload","url","URL","createObjectURL","link","document","createElement","href","newFileName","originalFileNameWithoutExt","split","slice","join","originalFileExtension","pop","setAttribute","appendChild","removeChild","revokeObjectURL","algorithmDescriptions","rle","description","lz77","className","children","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","algo","onDragOver","onDrop","onClick","ref","onChange","style","display","src","alt","marginBottom","fontSize","value","checked","textTransform","textAlign","disabled","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["/home/ragala-akhil/file-compressor-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst App = () => {\n  \n  const [selectedFile, setSelectedFile] = useState(null); \n  const [fileName, setFileName] = useState(''); \n  const [fileSize, setFileSize] = useState(0); \n  const [fileType, setFileType] = useState(''); \n  const [uploadedFileContent, setUploadedFileContent] = useState(null); \n\n  // Changed default selected algorithm from 'huffman' to 'lz77'\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('lz77'); \n  const [operationType, setOperationType] = useState('compress'); \n  const [processingResult, setProcessingResult] = useState(null); \n  const [message, setMessage] = useState(''); \n  const [messageType, setMessageType] = useState(''); \n  const [loading, setLoading] = useState(false); \n \n  const fileInputRef = useRef(null);\n\n  \n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(() => {\n        setMessage(''); \n        setMessageType(''); \n      }, 5000); \n      return () => clearTimeout(timer); \n    }\n  }, [message]); \n\n  \n  const handleFileChange = (event) => {\n    \n    const file = event.target.files ? event.target.files[0] : event.dataTransfer.files[0];\n\n    if (file) {\n      \n      if (file.size > 50 * 1024 * 1024) { \n        showMessage('File is too large. Max 50MB allowed for demo.', 'error');\n        \n        setSelectedFile(null);\n        setFileName('');\n        setFileSize(0);\n        setFileType('');\n        setUploadedFileContent(null);\n        return; \n      }\n\n      \n      setSelectedFile(file);\n      setFileName(file.name);\n      setFileSize(file.size);\n      setFileType(file.type); \n      setProcessingResult(null); \n\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        \n        if (file.type.startsWith('text/') || file.type.includes('json') || file.type.includes('xml') || file.type.includes('svg')) {\n          setUploadedFileContent(e.target.result); \n        } else if (file.type.startsWith('image/')) {\n          setUploadedFileContent(e.target.result); \n        } else {\n          setUploadedFileContent(null); \n          showMessage('Preview not available for this file type.', 'info');\n        }\n      };\n\n      \n      if (file.type.startsWith('text/') || file.type.includes('json') || file.type.includes('xml') || file.type.includes('svg')) {\n        reader.readAsText(file); \n      } else if (file.type.startsWith('image/')) {\n        reader.readAsDataURL(file); \n      } else {\n        \n      }\n\n      showMessage(`File '${file.name}' (${(file.size / 1024).toFixed(2)} KB) selected.`, 'info'); // Tell the user the file is selected\n    } else {\n      \n      setSelectedFile(null);\n      setFileName('');\n      setFileSize(0);\n      setFileType('');\n      setUploadedFileContent(null);\n      showMessage('No file selected.', 'info');\n    }\n  };\n\n\n  \n  const handleBrowseClick = () => {\n    fileInputRef.current.click();\n  };\n\n  \n  const handleDragOver = (event) => {\n    event.preventDefault(); \n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'copy'; \n  };\n\n  \n  const handleDrop = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    handleFileChange(event); \n  };\n\n  \n  const processFile = async () => {\n    if (!selectedFile) {\n      showMessage('Please select a file first.', 'error');\n      return;\n    }\n\n    setLoading(true); \n    setMessage('Processing file...');\n    setMessageType('info');\n    setProcessingResult(null); \n\n    try {\n      \n      const formData = new FormData();\n      formData.append('file', selectedFile); \n      formData.append('algorithm', selectedAlgorithm); \n      formData.append('operation', operationType);     \n      formData.append('originalSize', fileSize);      \n\n      \n      const response = await fetch('http://localhost:5000/api/process-file', {\n        method: 'POST', \n        body: formData, \n      });\n\n      \n      if (!response.ok) {\n        const errorData = await response.json(); \n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json(); \n\n      if (data.success) {\n        \n        const processedFileBlob = base64toBlob(data.processedFileBase64, data.mimeType);\n\n        \n        setProcessingResult({\n          originalSize: data.originalSize,\n          processedSize: data.processedSize,\n          compressionRatio: data.compressionRatio,\n          processingTime: data.processingTime,\n          processedFileBlob: processedFileBlob, \n          processedFileName: data.fileName, \n        });\n        showMessage(`File ${operationType === 'compress' ? 'compressed' : 'decompressed'} successfully!`, 'success');\n      } else {\n        showMessage(`Backend error: ${data.message}`, 'error');\n      }\n\n    } catch (error) {\n      \n      console.error('Error processing file:', error);\n      showMessage(`Error processing file: ${error.message}. Please ensure the backend server is running.`, 'error');\n    } finally {\n      setLoading(false); \n    }\n  };\n\n  \n  const base64toBlob = (base64, mimeType) => {\n    const byteCharacters = atob(base64); \n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers); \n    return new Blob([byteArray], { type: mimeType }); \n  };\n\n  \n  const showMessage = (msg, type) => {\n    setMessage(msg);\n    setMessageType(type);\n  };\n\n  \n  const handleDownload = () => {\n    if (processingResult && processingResult.processedFileBlob) {\n      const url = URL.createObjectURL(processingResult.processedFileBlob); \n      const link = document.createElement('a'); \n      link.href = url; \n\n      let newFileName;\n      const originalFileNameWithoutExt = fileName.split('.').slice(0, -1).join('.');\n      const originalFileExtension = fileName.split('.').pop();\n\n      if (operationType === 'compress') {\n        \n        newFileName = `${originalFileNameWithoutExt}_compressed_with_${selectedAlgorithm}.comp`;\n        \n      } else {\n        \n        newFileName = `${originalFileNameWithoutExt}_decompressed_with_${selectedAlgorithm}.${originalFileExtension}`;\n      }\n\n      link.setAttribute('download', newFileName); \n      document.body.appendChild(link); \n      link.click(); \n      document.body.removeChild(link); \n      URL.revokeObjectURL(url); \n      showMessage('File download initiated!', 'success');\n    } else {\n      showMessage('No processed file available for download.', 'error');\n    }\n  };\n\n  \n  const algorithmDescriptions = {\n    \n    rle: {\n      name: 'Run-Length Encoding (RLE)',\n      description: 'Simple compression that replaces repeated characters (like \"AAAAA\") with a count (like \"5A\"). Good for simple images. (Uses real custom implementation)',\n    },\n    lz77: {\n      name: 'LZ77',\n      description: 'Compresses data by finding repeated patterns and replacing them with references to where they appeared before. Used in popular formats like ZIP. (Uses real zlib Deflate/Inflate)',\n    },\n  };\n\n  \n  return (\n    \n    <div className=\"app-container-outer\"> {}\n      <div className=\"app-container\"> {}\n        <h1 className=\"main-heading\">\n          File Compression & Decompression Portal\n        </h1>\n\n        {}\n        <section className=\"app-section\">\n            <h2 className=\"section-heading\">Understanding the Algorithms</h2>\n          {Object.entries(algorithmDescriptions).map(([key, algo]) => (\n            <details key={key} className=\"algorithm-details\"> {}\n              <summary>{algo.name}</summary>\n              <p>{algo.description}</p>\n            </details>\n          ))}\n        </section>\n\n        {}\n        {}\n        <section className=\"app-section upload-section-red\">\n          <h2 className=\"section-heading\">1. Upload Your File</h2>\n          <div\n            className=\"drop-zone\" \n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n            onClick={handleBrowseClick}\n          >\n            <p>Drag & drop your file here, or</p>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileChange}\n              style={{ display: 'none' }} \n            />\n            <button\n              onClick={handleBrowseClick}\n              className=\"browse-button\"\n            >\n              Browse Files\n            </button>\n          </div>\n          {fileName && ( \n            <div className=\"file-info\"> {}\n              Selected File: <span>{fileName}</span> ({(fileSize / 1024).toFixed(2)} KB)\n            </div>\n          )}\n\n          {}\n          {uploadedFileContent && (\n            <div className=\"file-preview-container\">\n              <h3>File Content Preview:</h3>\n              {fileType.startsWith('image/') ? (\n                <img src={uploadedFileContent} alt=\"File Preview\" className=\"file-preview-image\" />\n              ) : (\n                <pre className=\"file-preview-text\">{uploadedFileContent}</pre> \n              )}\n            </div>\n          )}\n        </section>\n\n        {}\n        <section className=\"app-section\">\n          <h2 className=\"section-heading\">2. Choose Algorithm & Operation</h2>\n\n          {}\n          <div style={{ marginBottom: '25px' }}> {}\n            <h3 className=\"section-heading\" style={{ fontSize: '1.2em', marginBottom: '15px' }}>Select Algorithm:</h3>\n            <div className=\"radio-group\"> {}\n              {}\n              {['rle', 'lz77'].map(algo => (\n                <label key={algo} className=\"radio-label\"> {}\n                  <input\n                    type=\"radio\"\n                    name=\"algorithm\"\n                    value={algo}\n                    checked={selectedAlgorithm === algo}\n                    onChange={() => setSelectedAlgorithm(algo)}\n                  />\n                  <span style={{ textTransform: 'capitalize' }}> {}\n                    {algorithmDescriptions[algo].name}\n                  </span>\n                </label>\n              ))}\n            </div>\n          </div>\n\n          {}\n          <div>\n            <h3 className=\"section-heading\" style={{ fontSize: '1.2em', marginBottom: '15px' }}>Select Operation:</h3>\n            <div className=\"radio-group\"> {}\n              {}\n              <label className=\"radio-label compress\"> {}\n                <input\n                  type=\"radio\"\n                  name=\"operation\"\n                  value=\"compress\"\n                  checked={operationType === 'compress'}\n                  onChange={() => setOperationType('compress')}\n                />\n                <span>Compress</span>\n              </label>\n              <label className=\"radio-label decompress\"> {}\n                <input\n                  type=\"radio\"\n                  name=\"operation\"\n                  value=\"decompress\"\n                  checked={operationType === 'decompress'}\n                  onChange={() => setOperationType('decompress')}\n                />\n                <span>Decompress</span>\n              </label>\n            </div>\n          </div>\n        </section>\n\n        {}\n        <div style={{ textAlign: 'center', marginBottom: '30px' }}> {}\n          <button\n            onClick={processFile}\n            disabled={!selectedFile || loading} \n            className=\"process-button\" \n          >\n            {loading ? 'Processing...' : `Process File (${operationType.charAt(0).toUpperCase() + operationType.slice(1)})`}\n          </button>\n        </div>\n\n        {}\n        {message && (\n          <div\n            className={`message-box ${messageType}`} \n          >\n            {message}\n          </div>\n        )}\n\n        {}\n        {processingResult && ( \n          <section className=\"results-section\"> {}\n            <h2 className=\"section-heading\">3. Processing Results</h2>\n            <div className=\"results-grid\"> {}\n              <div className=\"result-item\"> {}\n                <span>Original Size:</span>\n                <span>{processingResult.originalSize} bytes</span>\n              </div>\n              <div className=\"result-item\">\n                <span>Processed Size:</span>\n                <span>{processingResult.processedSize} bytes</span>\n              </div>\n              <div className=\"result-item\">\n                <span>Compression Ratio:</span>\n                <span>{processingResult.compressionRatio}</span>\n              </div>\n              <div className=\"result-item\">\n                <span>Processing Time:</span>\n                <span>{processingResult.processingTime} ms</span>\n              </div>\n            </div>\n            <div style={{ textAlign: 'center' }}> {}\n              <button\n                onClick={handleDownload}\n                className=\"download-button\" \n              >\n                Download Processed File\n              </button>\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}